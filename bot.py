import asyncio
import logging
from aiogram import Bot, Dispatcher
from config import API_TOKEN
from db import init_db  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
import sys
from handlers import user

logging.basicConfig(level=logging.DEBUG, stream=sys.stdout)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–≤–Ω—É—Ç—Ä–∏ db.py —ç—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç db_pool)
    await init_db()

    from db import db_pool  # —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ —á–∏—Ç–∞–µ–º –µ–≥–æ
    if db_pool is None:
        logging.error("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
        return

    logging.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    user.setup_user(dp)

    try:
        await dp.start_polling(bot)
    except Exception as e:
        logging.critical(f"üö® –û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {e}", exc_info=True)
    finally:
        await bot.session.close()




# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
if __name__ == "__main__":
    import nest_asyncio
    nest_asyncio.apply()  # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤–Ω—É—Ç—Ä–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Å—Ä–µ–¥
    asyncio.run(main())  # –ó–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–µ–º main()
