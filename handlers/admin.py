from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from db import db_pool
from config import ADMINS
router = Router()

def is_admin(user_id):
    return user_id in ADMINS



@router.message(F.text.lower() == "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç—á—ë—Ç—ã")
async def check_reports(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
        return

    async with db_pool.acquire() as conn:
        task = await conn.fetchrow("SELECT * FROM tasks WHERE status = 'completed' LIMIT 1")

        if not task:
            await message.answer("‚ùå –ù–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.")
            return

    approve_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"approve_{task['id']}")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{task['id']}")]
        ]
    )

    await message.answer_photo(
        photo=task["photo"],
        caption=f"üìç –õ–æ–∫–∞—Ü–∏—è: {task['location']}\n–û–ø–∏—Å–∞–Ω–∏–µ: {task['description']}",
        reply_markup=approve_keyboard
    )


async def setup_admin(dp):
    dp.include_router(router)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
